var M=Object.defineProperty,N=Object.defineProperties;var I=Object.getOwnPropertyDescriptors;var D=Object.getOwnPropertySymbols;var K=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var y=(t,e,a)=>e in t?M(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,E=(t,e)=>{for(var a in e||(e={}))K.call(e,a)&&y(t,a,e[a]);if(D)for(var a of D(e))L.call(e,a)&&y(t,a,e[a]);return t},b=(t,e)=>N(t,I(e));var g=(t,e,a)=>(y(t,typeof e!="symbol"?e+"":e,a),a);import{d as V,r as S,o as _,c as v,a as m,F,b as H,e as k,w as O,n as U,t as W,f as $,g as z,h as J,u as Y,i as j}from"./vendor.d77fd247.js";const q=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const u of document.querySelectorAll('link[rel="modulepreload"]'))r(u);new MutationObserver(u=>{for(const c of u)if(c.type==="childList")for(const s of c.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function a(u){const c={};return u.integrity&&(c.integrity=u.integrity),u.referrerpolicy&&(c.referrerPolicy=u.referrerpolicy),u.crossorigin==="use-credentials"?c.credentials="include":u.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function r(u){if(u.ep)return;u.ep=!0;const c=a(u);fetch(u.href,c)}};q();const Z={class:"header"},G=["src"],Q={class:"body"},X=V({setup(t){const e=[{name:"Home",to:"/",text:"\u8BA1\u7B97",icon:"assets/calc.svg"},{name:"Predict",to:"/predict",text:"\u9884\u6D4B",icon:"assets/predict.svg"},{name:"About",to:"/about",text:"\u5173\u4E8E",icon:"assets/about.svg"}];return(a,r)=>{const u=S("router-link"),c=S("router-view");return _(),v(F,null,[m("div",Z,[(_(),v(F,null,H(e,s=>k(u,{class:U({"nav-to":!0,on:s.name==a.$route.name}),to:s.to},{default:O(()=>[m("img",{src:s.icon},null,8,G),m("b",null,W(s.text),1)]),_:2},1032,["class","to"])),64))]),m("div",Q,[k(c)])],64)}}}),x="modulepreload",A={},ee="",h=function(e,a){return!a||a.length===0?e():Promise.all(a.map(r=>{if(r=`${ee}${r}`,r in A)return;A[r]=!0;const u=r.endsWith(".css"),c=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${c}`))return;const s=document.createElement("link");if(s.rel=u?"stylesheet":x,u||(s.as="script",s.crossOrigin=""),s.href=r,document.head.appendChild(s),u)return new Promise((o,n)=>{s.addEventListener("load",o),s.addEventListener("error",n)})})).then(()=>e())},te=[{name:"Home",path:"/",component:()=>h(()=>import("./Home.8da9a219.js"),["assets/Home.8da9a219.js","assets/Home.70f1558f.css","assets/vendor.d77fd247.js","assets/CheckBox.29371b78.js","assets/CheckBox.863eca8d.css","assets/plugin-vue_export-helper.21dcd24c.js"])},{name:"Predict",path:"/predict",component:()=>h(()=>import("./Predict.32fb3675.js"),["assets/Predict.32fb3675.js","assets/Predict.18c34a2b.css","assets/vendor.d77fd247.js","assets/CheckBox.29371b78.js","assets/CheckBox.863eca8d.css","assets/plugin-vue_export-helper.21dcd24c.js"])},{name:"About",path:"/about",component:()=>h(()=>import("./About.6bd3caf1.js"),["assets/About.6bd3caf1.js","assets/About.433ea64a.css","assets/plugin-vue_export-helper.21dcd24c.js","assets/vendor.d77fd247.js"])}],ae=$({history:z(),routes:te});var p={base:{key:"\u7C7B\u578B",multiplier:"\u500D\u7387",addend:"\u52A0\u6027\u5E38\u6570"},stat:{lv:"\u7B49\u7EA7",hp:"\u751F\u547D\u503C",baseHP:"\u57FA\u7840\u751F\u547D\u503C",hpp:"\u751F\u547D\u503C%",atk:"\u653B\u51FB\u529B",baseATK:"\u57FA\u7840\u653B\u51FB\u529B",atkp:"\u653B\u51FB\u529B%",def:"\u9632\u5FA1\u529B",baseDEF:"\u57FA\u7840\u9632\u5FA1\u529B",defp:"\u9632\u5FA1\u529B%",em:"\u5143\u7D20\u7CBE\u901A",stamina:"\u4F53\u529B",cr:"\u66B4\u51FB\u7387",cd:"\u66B4\u51FB\u4F24\u5BB3",hb:"\u6CBB\u7597\u52A0\u6210",ihb:"\u53D7\u6CBB\u7597\u52A0\u6210",er:"\u5143\u7D20\u5145\u80FD\u6548\u7387",cdr:"\u51B7\u5374\u7F29\u51CF",ss:"\u62A4\u76FE\u5F3A\u6548",pyroDB:"\u706B\u5143\u7D20\u4F24\u5BB3\u52A0\u6210",pyroRES:"\u706B\u5143\u7D20\u6297\u6027",hydroDB:"\u6C34\u5143\u7D20\u4F24\u5BB3\u52A0\u6210",hydroRES:"\u6C34\u5143\u7D20\u6297\u6027",dendroDB:"\u8349\u5143\u7D20\u4F24\u5BB3\u52A0\u6210",dendroRES:"\u8349\u5143\u7D20\u6297\u6027",electroDB:"\u96F7\u5143\u7D20\u4F24\u5BB3\u52A0\u6210",electroRES:"\u96F7\u5143\u7D20\u6297\u6027",anemoDB:"\u98CE\u5143\u7D20\u4F24\u5BB3\u52A0\u6210",anemoRES:"\u98CE\u5143\u7D20\u6297\u6027",cryoDB:"\u51B0\u5143\u7D20\u4F24\u5BB3\u52A0\u6210",cryoRES:"\u51B0\u5143\u7D20\u6297\u6027",geoDB:"\u5CA9\u5143\u7D20\u4F24\u5BB3\u52A0\u6210",geoRES:"\u5CA9\u5143\u7D20\u6297\u6027",physicalDB:"\u7269\u7406\u4F24\u5BB3\u52A0\u6210",physicalRES:"\u7269\u7406\u6297\u6027",db:"\u4F24\u5BB3\u52A0\u6210",res:"\u6297\u6027",rr:"\u65E0\u89C6\u6297\u6027",dr:"\u65E0\u89C6\u9632\u5FA1",bb:"\u57FA\u7840\u4E58\u533A",rb:"\u53CD\u5E94\u52A0\u6210\u7CFB\u6570"},param:{pyro:"\u706B",hydro:"\u6C34",dendro:"\u8349",electro:"\u96F7",anemo:"\u98CE",cryo:"\u51B0",geo:"\u5CA9",physical:"\u7269\u7406",min:"\u4E0D\u66B4\u51FB",avg:"\u671F\u671B",max:"\u66B4\u51FB",pyro_melt:"\u706B\u878D\u5316",pyro_vapo:"\u706B\u84B8\u53D1",hydro_vapo:"\u6C34\u84B8\u53D1",cryo_melt:"\u51B0\u878D\u5316"},formula:{sim_dmg:{name:"\u666E\u901A\u4F24\u5BB3",params:["\u5143\u7D20\u7C7B\u578B","\u662F\u5426\u66B4\u51FB"]},amp_dmg:{name:"\u589E\u5E45\u4F24\u5BB3",params:["\u53CD\u5E94\u7C7B\u578B","\u662F\u5426\u66B4\u51FB"]},trf_dmg:{name:"\u5267\u53D8\u4F24\u5BB3",params:[]},shield:{name:"\u62A4\u76FE\u5438\u6536\u91CF",params:[]},heal:{name:"\u6CBB\u7597\u91CF",params:[]}},buff:{add:{name:"\u63D0\u5347A",params:["\u63D0\u5347","\u63D0\u5347\u91CF"]},"add_%":{name:"\u63D0\u5347A (%)",params:["\u63D0\u5347","\u63D0\u5347\u91CF"]},add_base:{name:"\u63D0\u5347\u653B\u751F\u9632 (%)",params:["\u63D0\u5347","\u63D0\u5347\u6BD4\u4F8B"]},add_by:{name:"\u57FA\u4E8EA\uFF0C\u63D0\u5347B",params:["\u63D0\u5347","\u57FA\u4E8E","\u57FA\u4E8E\u6BD4\u4F8B"]},"add_by_%":{name:"\u57FA\u4E8EA\uFF0C\u63D0\u5347B (%)",params:["\u63D0\u5347","\u57FA\u4E8E","\u57FA\u4E8E\u6BD4\u4F8B"]},add_by_up:{name:"\u57FA\u4E8EA\uFF0C\u63D0\u5347B\uFF0C\u4E0A\u9650\u4E3AC",params:["\u63D0\u5347","\u57FA\u4E8E","\u57FA\u4E8E\u6BD4\u4F8B","\u4E0A\u9650"]},"add_by_up_%":{name:"\u57FA\u4E8EA\uFF0C\u63D0\u5347B\uFF0C\u4E0A\u9650\u4E3AC (%)",params:["\u63D0\u5347","\u57FA\u4E8E","\u57FA\u4E8E\u6BD4\u4F8B","\u4E0A\u9650"]}},artifact:{flower:"\u751F\u4E4B\u82B1",plume:"\u6B7B\u4E4B\u7FBD",sands:"\u65F6\u4E4B\u6C99",goblet:"\u7A7A\u4E4B\u676F",circlet:"\u7406\u4E4B\u51A0"},learn:{trainSize:"\u8BAD\u7EC3\u96C6\u5927\u5C0F",resin:"\u6295\u5165\u4F53\u529B",niter:"\u8FED\u4EE3\u6B21\u6570"},step:{BASE:"\u57FA\u7840\u4E58\u533A",CRIT:"\u66B4\u51FB\u4E58\u533A",DB:"\u4F24\u5BB3\u52A0\u6210\u4E58\u533A",DEF:"\u9632\u5FA1\u4E58\u533A",RES:"\u6297\u6027\u4E58\u533A",VM:"\u53CD\u5E94\u7CFB\u6570\u4E58\u533A",VMDB:"\u53CD\u5E94\u52A0\u6210\u4E58\u533A"}};class C{constructor(e){g(this,"stat");this.stat=e}get BASE(){let e=this.stat.character[this.stat.base.key];return this.stat.base.multiplier*e+this.stat.base.addend+this.stat.character.bb}get DEF(){return(this.stat.character.lv+100)/(this.stat.character.lv+100+(this.stat.enemy.lv+100)*(1-this.stat.character.dr))}DB(e){let a=e+"DB";return 1+this.stat.character[a]+this.stat.character.db}RES(e){let a=e+"RES",r=this.stat.enemy[a]-this.stat.character.rr;return r<0?1-r/2:r<.75?1-r:1/(1+4*r)}CRIT(e){switch(e){case"min":return 1;case"avg":return 1+Math.min(this.stat.character.cr,1)*this.stat.character.cd;case"max":return 1+this.stat.character.cd;default:return NaN}}VM(e){switch(e){case"pyro_vapo":case"cryo_melt":return 1.5;case"pyro_melt":case"hydro_vapo":return 2;default:return NaN}}get VMDB(){return 1+2.78*this.stat.character.em/(this.stat.character.em+1400)+this.stat.character.rb}}function R(t){t.value=1;for(let e of t.steps)t.value*=e.value}var f={sim_dmg:{params:[{type:"enum",default:"pyro",from:["pyro","hydro","dendro","electro","anemo","cryo","geo","physical"]},{type:"enum",default:"avg",from:["min","avg","max"]}],calc:(t,e)=>{let a=new C(t),r={value:1,steps:[{key:"BASE",value:a.BASE},{key:"CRIT",value:a.CRIT(e[1])},{key:"DB",value:a.DB(e[0])},{key:"DEF",value:a.DEF},{key:"RES",value:a.RES(e[0])}]};return R(r),r}},amp_dmg:{params:[{type:"enum",default:"pyro_melt",from:["pyro_melt","pyro_vapo","hydro_vapo","cryo_melt"]},{type:"enum",default:"avg",from:["min","avg","max"]}],calc:(t,e)=>{let a=new C(t),r=e[0].split("_")[0],u={value:1,steps:[{key:"BASE",value:a.BASE},{key:"CRIT",value:a.CRIT(e[1])},{key:"DB",value:a.DB(r)},{key:"DEF",value:a.DEF},{key:"RES",value:a.RES(r)},{key:"VM",value:a.VM(e[0])},{key:"VMDB",value:a.VMDB}]};return R(u),u}},trf_dmg:{params:[],calc:(t,e)=>({value:0,steps:[]})},sheild:{params:[],calc:(t,e)=>({value:0,steps:[]})},heal:{params:[],calc:(t,e)=>({value:0,steps:[]})},"":{params:[],calc:(t,e)=>({value:0,steps:[]})}},d={key:{type:"enum",default:"atk",from:["hp","atk","def"]},multiplier:{type:"percentage",default:0},addend:{type:"basic",default:0},lv:{type:"basic",default:0},hp:{type:"basic",default:0},baseHP:{type:"basic",default:0},atk:{type:"basic",default:0},baseATK:{type:"basic",default:0},def:{type:"basic",default:0},baseDEF:{type:"basic",default:0},em:{type:"basic",default:0},stamina:{type:"basic",default:0},cr:{type:"percentage",default:0},cd:{type:"percentage",default:0},hb:{type:"percentage",default:0},ihb:{type:"percentage",default:0},er:{type:"percentage",default:0},cdr:{type:"percentage",default:0},ss:{type:"percentage",default:0},pyroDB:{type:"percentage",default:0},pyroRES:{type:"percentage",default:0},hydroDB:{type:"percentage",default:0},hydroRES:{type:"percentage",default:0},dendroDB:{type:"percentage",default:0},dendroRES:{type:"percentage",default:0},electroDB:{type:"percentage",default:0},electroRES:{type:"percentage",default:0},anemoDB:{type:"percentage",default:0},anemoRES:{type:"percentage",default:0},cryoDB:{type:"percentage",default:0},cryoRES:{type:"percentage",default:0},geoDB:{type:"percentage",default:0},geoRES:{type:"percentage",default:0},physicalDB:{type:"percentage",default:0},physicalRES:{type:"percentage",default:0},db:{type:"percentage",default:0},res:{type:"percentage",default:0},rr:{type:"percentage",default:0},bb:{type:"basic",default:0},rb:{type:"percentage",default:0}},B={add:{params:[{type:"enum",default:"atk",from:["hp","atk","def","em","bb"]},{type:"basic",default:0}],apply:(t,e)=>{let a=e[0],r=e[1];t.character[a]+=r}},"add_%":{params:[{type:"enum",default:"cr",from:["cr","cd","hb","er","ss","pyroDB","hydroDB","dendroDB","electroDB","anemoDB","cryoDB","geoDB","physicalDB","db","rr","dr","rb"]},{type:"percentage",default:0}],apply:(t,e)=>{let a=e[0],r=e[1];t.character[a]+=r}},add_base:{params:[{type:"enum",default:"atk",from:["hp","atk","def"]},{type:"percentage",default:0}],apply:(t,e)=>{let a=e[0],r="base"+e[0].toUpperCase(),u=e[1];t.character[a]+=u*t.character[r]}},add_by:{params:[{type:"enum",default:"atk",from:["hp","atk","def","em","bb"]},{type:"enum",default:"baseATK",from:["baseHP","baseATK","baseDEF","hp","atk","def","em"]},{type:"percentage",default:0}],apply:(t,e)=>{let a=e[0],r=e[1],u=e[2];t.character[a]+=u*t.character[r]}},"add_by_%":{params:[{type:"enum",default:"db",from:["cr","cd","hb","er","ss","pyroDB","hydroDB","dendroDB","electroDB","anemoDB","cryoDB","geoDB","physicalDB","db","rr","dr","rb"]},{type:"enum",default:"er",from:["cr","cd","hb","er","ss","pyroDB","hydroDB","dendroDB","electroDB","anemoDB","cryoDB","geoDB","physicalDB"]},{type:"percentage",default:0}],apply:(t,e)=>{let a=e[0],r=e[1],u=e[2];t.character[a]+=u*t.character[r]}},add_by_up:{params:[{type:"enum",default:"atk",from:["hp","atk","def","em","bb"]},{type:"enum",default:"baseATK",from:["baseHP","baseATK","baseDEF","hp","atk","def","em"]},{type:"percentage",default:0},{type:"basic",default:0}],apply:(t,e)=>{let a=e[0],r=e[1],u=e[2],c=e[3];t.character[a]+=Math.min(u*t.character[r],c)}},"add_by_up_%":{params:[{type:"enum",default:"db",from:["cr","cd","hb","er","ss","pyroDB","hydroDB","dendroDB","electroDB","anemoDB","cryoDB","geoDB","physicalDB","db","rr","dr","rb"]},{type:"enum",default:"er",from:["cr","cd","hb","er","ss","pyroDB","hydroDB","dendroDB","electroDB","anemoDB","cryoDB","geoDB","physicalDB"]},{type:"percentage",default:0},{type:"percentage",default:0}],apply:(t,e)=>{let a=e[0],r=e[1],u=e[2],c=e[3];t.character[a]+=Math.min(u*t.character[r],c)}},"":{params:[],apply:(t,e)=>{}}};function re(t,e,a){let r={base:t.stat.base,character:b(E({},t.stat.character),{db:0,res:0,rr:0,dr:0,bb:0,rb:0}),enemy:t.stat.enemy};e&&a&&(r.character.hp+=-e.hp+a.hpp*r.character.baseHP+a.hp,r.character.atk+=-e.atk+a.atkp*r.character.baseATK+a.atk,r.character.def+=-e.def+a.defp*r.character.baseDEF+a.def,r.character.em+=-e.em+a.em,r.character.stamina+=-e.stamina,r.character.cr+=-e.cr+a.cr,r.character.cd+=-e.cd+a.cd,r.character.hb+=-e.hb+a.hb,r.character.ihb+=-e.ihb,r.character.er+=-e.er+a.er,r.character.cdr+=-e.cdr,r.character.ss+=-e.ss,r.character.pyroDB+=-e.pyroDB+a.pyroDB,r.character.pyroRES+=-e.pyroRES,r.character.hydroDB+=-e.hydroDB+a.hydroDB,r.character.hydroRES+=-e.hydroRES,r.character.dendroDB+=-e.dendroDB+a.dendroDB,r.character.dendroRES+=-e.dendroRES,r.character.electroDB+=-e.electroDB+a.electroDB,r.character.electroRES+=-e.electroRES,r.character.anemoDB+=-e.anemoDB+a.anemoDB,r.character.anemoRES+=-e.anemoRES,r.character.cryoDB+=-e.cryoDB+a.cryoDB,r.character.cryoRES+=-e.cryoRES,r.character.geoDB+=-e.geoDB+a.geoDB,r.character.geoRES+=-e.geoRES,r.character.physicalDB+=-e.physicalDB+a.physicalDB,r.character.physicalRES+=-e.physicalRES);for(let u of t.buffs)u.on&&B[u.id].apply(r,u.params);return f[t.formula.id].calc(r,t.formula.params)}function i(t,e,a){let r=t[e];t[e]=t[a],t[a]=r}function ne(t,e,a){if(typeof t=="number")return Math.floor(Math.random()*t);if(e!==void 0&&a!==void 0){let r=[...t],u=[...a],c=0;for(let s of u)c+=s;for(let s=0;s<e;++s){let o=Math.random()*c,n=0;for(let l=s;l<r.length;++l)if(n+=u[l],o<n){c-=u[l],i(r,s,l),i(u,s,l);break}}return r.slice(0,e)}else{let r=Math.floor(Math.random()*t.length);return t[r]}}var w={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(t){var e="",a,r,u,c,s,o,n,l=0;for(t=this._utf8_encode(t);l<t.length;)a=t.charCodeAt(l++),r=t.charCodeAt(l++),u=t.charCodeAt(l++),c=a>>2,s=(a&3)<<4|r>>4,o=(r&15)<<2|u>>6,n=u&63,isNaN(r)?o=n=64:isNaN(u)&&(n=64),e=e+this._keyStr.charAt(c)+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(n);return e},decode:function(t){var e="",a,r,u,c,s,o,n,l=0;for(t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");l<t.length;)c=this._keyStr.indexOf(t.charAt(l++)),s=this._keyStr.indexOf(t.charAt(l++)),o=this._keyStr.indexOf(t.charAt(l++)),n=this._keyStr.indexOf(t.charAt(l++)),a=c<<2|s>>4,r=(s&15)<<4|o>>2,u=(o&3)<<6|n,e=e+String.fromCharCode(a),o!=64&&(e=e+String.fromCharCode(r)),n!=64&&(e=e+String.fromCharCode(u));return e=this._utf8_decode(e),e},_utf8_encode:function(t){t=t.replace(/\r\n/g,`
`);for(var e="",a=0;a<t.length;a++){var r=t.charCodeAt(a);r<128?e+=String.fromCharCode(r):r>127&&r<2048?(e+=String.fromCharCode(r>>6|192),e+=String.fromCharCode(r&63|128)):(e+=String.fromCharCode(r>>12|224),e+=String.fromCharCode(r>>6&63|128),e+=String.fromCharCode(r&63|128))}return e},_utf8_decode:function(t){for(var e="",a=0,r=0,u=0,c=0;a<t.length;)r=t.charCodeAt(a),r<128?(e+=String.fromCharCode(r),a++):r>191&&r<224?(u=t.charCodeAt(a+1),e+=String.fromCharCode((r&31)<<6|u&63),a+=2):(u=t.charCodeAt(a+1),c=t.charCodeAt(a+2),e+=String.fromCharCode((r&15)<<12|(u&63)<<6|c&63),a+=3);return e}};function P(t){return JSON.parse(JSON.stringify(t))}const ue={flower:["hp"],plume:["atk"],sands:["hpp","atkp","defp","em","er"],goblet:["hpp","atkp","defp","em","pyroDB","hydroDB","electroDB","anemoDB","cryoDB","geoDB","physicalDB"],circlet:["hpp","atkp","defp","em","cr","cd","hb"]},T=Symbol(),se=J({state:()=>({preset:{title:"\u672A\u547D\u540D\u7684\u9884\u8BBE",formula:{id:"sim_dmg",params:["pyro","avg"]},stat:{base:{key:"atk",multiplier:1,addend:0},character:{lv:90,hp:0,baseHP:0,atk:0,baseATK:0,def:0,baseDEF:0,em:0,stamina:240,cr:.05,cd:.5,hb:0,ihb:0,er:0,cdr:0,ss:0,pyroDB:0,pyroRES:0,hydroDB:0,hydroRES:0,dendroDB:0,dendroRES:0,electroDB:0,electroRES:0,anemoDB:0,anemoRES:0,cryoDB:0,cryoRES:0,geoDB:0,geoRES:0,physicalDB:0,physicalRES:0},enemy:{lv:100,pyroRES:.1,hydroRES:.1,dendroRES:.1,electroRES:.1,anemoRES:.1,cryoRES:.1,geoRES:.1,physicalRES:.1,res:.1}},buffs:[]},ab:{hp:0,atk:0,def:0,em:0,stamina:0,cr:0,cd:0,hb:0,ihb:0,er:0,cdr:0,ss:0,pyroDB:0,pyroRES:0,hydroDB:0,hydroRES:0,dendroDB:0,dendroRES:0,electroDB:0,electroRES:0,anemoDB:0,anemoRES:0,cryoDB:0,cryoRES:0,geoDB:0,geoRES:0,physicalDB:0,physicalRES:0},mains:{flower:"hp",plume:"atk",sands:"atkp",goblet:"pyroDB",circlet:"cr"},learn:{trainSize:1e4,resin:2e4,niter:50},custom:{use:!1,weights:{hp:0,atk:0,def:0,hpp:0,atkp:0,defp:0,er:0,em:0,cr:0,cd:0}}}),getters:{calculation(t){let e=re(t.preset);for(let a of e.steps)a.key=p.step[a.key];return e},formula(t){return{name:"\u76EE\u6807\u51FD\u6570",param:{type:"enum",value:t.preset.formula.id,items:["sim_dmg","amp_dmg"].map(e=>({key:e,text:p.formula[e].name}))},payload:{type:"changeFormula"}}},formulaParams(t){return f[t.preset.formula.id].params.map((e,a)=>({name:p.formula[t.preset.formula.id].params[a],param:{type:"enum",value:t.preset.formula.params[a],items:e.from.map(r=>({key:r,text:p.param[r]}))},payload:{type:"changeFormulaParams",index:a}}))},statBase(t){return["key","multiplier","addend"].map(e=>({name:p.base[e],param:{type:d[e].type,value:t.preset.stat.base[e],items:d[e].type==="enum"?d[e].from.map(a=>({key:a,text:p.stat[a]})):void 0},payload:{type:"changeStatBase",key:e}}))},statCharacter(t){return["lv","baseHP","_hp","baseATK","_atk","baseDEF","_def","em","stamina","cr","cd","hb","ihb","er","cdr","ss","pyroDB","pyroRES","hydroDB","hydroRES","dendroDB","dendroRES","electroDB","electroRES","anemoDB","anemoRES","cryoDB","cryoRES","geoDB","geoRES","physicalDB","physicalRES"].map(e=>{let a={name:"",param:{type:"",value:0},payload:{type:"changeStatCharacter",key:e}};if(e[0]=="_"){let r=e.slice(1),u="base"+r.toUpperCase();a.name="\u7EFF\u5B57"+p.stat[r],a.param.type="basic",a.param.value=t.preset.stat.character[r]-t.preset.stat.character[u]}else a.name=p.stat[e],a.param.type=d[e].type,a.param.value=t.preset.stat.character[e];return a})},statEnemy(t){return["lv","pyroRES","hydroRES","dendroRES","electroRES","anemoRES","cryoRES","geoRES","physicalRES","res"].map(e=>({name:p.stat[e],param:{type:d[e].type,value:t.preset.stat.enemy[e]},payload:{type:"changeStatEnemy",key:e}}))},buffTypes(t){return["add","add_%","add_base","add_by","add_by_%","add_by_up","add_by_up_%"].map(e=>({key:e,text:p.buff[e].name}))},buffs(t){return t.preset.buffs.map((e,a)=>{let r={};return["on","title"].forEach(u=>{r[u]={value:e[u],payload:{type:"changeBuff",index:a,key:u}}}),r.params=B[e.id].params.map((u,c)=>({name:p.buff[e.id].params[c],param:{type:u.type,value:e.params[c],items:u.type==="enum"?u.from.map(s=>({key:s,text:p.stat[s]})):void 0},payload:{type:"changeBuffParam",buffIndex:a,paramIndex:c}})),r})},abParams(t){return["hp","atk","def","em","stamina","cr","cd","hb","ihb","er","cdr","ss","pyroDB","pyroRES","hydroDB","hydroRES","dendroDB","dendroRES","electroDB","electroRES","anemoDB","anemoRES","cryoDB","cryoRES","geoDB","geoRES","physicalDB","physicalRES"].map(e=>({name:"+"+p.stat[e],param:{type:d[e].type,value:t.ab[e]},payload:{type:"changeAbParam",key:e}}))},mainAffixes(t){return["flower","plume","sands","goblet","circlet"].map(e=>({name:p.artifact[e],param:{type:"enum",value:t.mains[e],items:ue[e].map(a=>({key:a,text:p.stat[a]}))},payload:{type:"changeMainAffix",key:e}}))},learnParams(t){return["trainSize","resin","niter"].map(e=>({name:p.learn[e],param:{type:"basic",value:t.learn[e]},payload:{type:"changeLearnParam",key:e}}))},customWeights(t){return["hp","atk","def","hpp","atkp","defp","em","er","cr","cd"].map(e=>({name:p.stat[e],param:{type:"basic",value:t.custom.weights[e]},payload:{type:"changeCustomWeight",key:e}}))},export(t){let e=P(t);for(let u of["character","enemy"]){e.preset.stat[u]={};for(let c in t.preset.stat[u])t.preset.stat[u][c]!==0&&(e.preset.stat[u][c]=t.preset.stat[u][c])}e.ab={};for(let u in t.ab)t.ab[u]!==0&&(e.ab[u]=t.ab[u]);e.custom.weights={};for(let u in t.custom.weights)t.custom.weights[u]!==0&&(e.custom.weights[u]=t.custom.weights[u]);let a=JSON.stringify(e),r=w.encode(a);return"uni://"+r}},mutations:{changeFormula(t,e){t.preset.formula.id=e.value,t.preset.formula.params=f[e.value].params.map(a=>a.default)},changeFormulaParams(t,e){t.preset.formula.params[e.index]=e.value},changeStatBase(t,e){let a=e.key;t.preset.stat.base[a]=e.value},changeStatCharacter(t,e){if(e.key[0]=="_"){let a=e.key.slice(1),r="base"+a.toUpperCase();t.preset.stat.character[a]=t.preset.stat.character[r]+e.value}else if(["baseHP","baseATK","baseDEF"].includes(e.key)){let a=e.key,r=a.slice(4).toLowerCase();t.preset.stat.character[r]+=e.value-t.preset.stat.character[a],t.preset.stat.character[a]=e.value}else t.preset.stat.character[e.key]=e.value},changeStatEnemy(t,e){t.preset.stat.enemy[e.key]=e.value},changeBuff(t,e){t.preset.buffs[e.index][e.key]=e.value},changeBuffParam(t,e){t.preset.buffs[e.buffIndex].params[e.paramIndex]=e.value},addBuff(t,e){t.preset.buffs.push({id:e,on:!0,title:"\u672A\u547D\u540D\u7684BUFF",params:B[e].params.map(a=>a.default)})},upBuff(t,e){e&&i(t.preset.buffs,e-1,e)},downBuff(t,e){e<t.preset.buffs.length-1&&i(t.preset.buffs,e,e+1)},delBuff(t,e){t.preset.buffs.splice(e,1)},setPresetTitle(t,e){t.preset.title=e},changeAbParam(t,e){t.ab[e.key]=e.value},changeMainAffix(t,e){t.mains[e.key]=e.value},changeLearnParam(t,e){t.learn[e.key]=e.value},changeUseCustom(t,e){t.custom.use=e},changeCustomWeight(t,e){t.custom.weights[e.key]=e.value},setState(t,e){t.preset=e.preset,t.ab=e.ab,t.mains=e.mains,t.learn=e.learn}},actions:{import({state:t},e){return new Promise((a,r)=>{if(e=e.trim(),e.substring(0,6)==="uni://")try{let u=w.decode(e.slice(6)),c=JSON.parse(u),s=P(t);s.preset.title=c.preset.title,s.preset.formula=c.preset.formula,s.preset.buffs=c.preset.buffs,s.preset.stat.base=c.preset.stat.base;for(let o of["character","enemy"])for(let n in s.preset.stat[o])n in c.preset.stat[o]?s.preset.stat[o][n]=c.preset.stat[o][n]:s.preset.stat[o][n]=0;for(let o in s.ab)o in c.ab?s.ab[o]=c.ab[o]:s.ab[o]=0;s.mains=c.mains,s.learn=c.learn,s.custom.use=c.custom.use;for(let o in s.custom.weights)o in c.custom.weights?s.custom.weights[o]=c.custom.weights[o]:s.custom.weights[o]=0;t.preset=s.preset,t.ab=s.ab,t.mains=s.mains,t.learn=s.learn,t.custom=s.custom,a(void 0)}catch{r(new Error("Invalid link"))}else r(new Error("Invalid link"))})}}});function le(){return Y(T)}j(X).use(ae).use(se,T).mount("#app");export{re as a,p as b,ne as c,le as u};
